{#
This macro facilitates the easy embedding of component views.
These component views can be used in both the app's views and the styleguide, to prevent
HTML duplication.

Considerations:
1. Another solution is to let the developer create macros for each component, but that could
become tedious when all you want is to do is include a bit of HTML in your view.
Also, the current solution forces each component to have it's own file, which improves clarity.
2. The include uses the `only` keyword to make sure no other data from parent views leaks into
the components view, and all data is sent through the `properties` parameter.

Example call:
`{{ ui.component('buttons/button', { 'title': 'Melp' }) }}`

@param string slug The name of the component, which corresponds with the name of the file.
@param object properties The properties of the component.
#}
{% macro component(slug, properties) %}
    {% include ('@htmldev/components/' ~ slug ~ '.html.twig') with properties only %}
{% endmacro %}



{#
This method does exactly the same as the `component()` macro, except it's intended
for rendering inside the style guide, with code examples et cetera.

@param string slug The name of the component, which corresponds with the name of the file.
@param object properties The properties of the component.
#}
{% macro styleguide_component(slug, properties) %}
    {% import '@htmldev/macros/components.html.twig' as _self %}

    {% set componentHtml %}
        {{ _self.component(slug, properties) }}
    {% endset %}

    {{ ui_and_html(componentHtml) }}

{% endmacro %}



{#
Locates the given icon symbol and returns its XML with the given options as its attributes.

@param string symbol The name of the symbol to load, without .svg extension.
@param object options
#}
{% macro svg_icon(symbol, options) %}
    {% set default_options = {
        width: 16,
        height: 16,
        viewbox_x: 16,
        viewbox_y: 16,
        extra_css_classes: [],
        include_accessibility: true,
        directory: 'images/icons'
    } %}
    {% set options = default_options|merge(options|default([])) %}

    {{ embed_icon(symbol, options.width, options.height, options.viewbox_x, options.viewbox_y, options.extra_css_classes, options.include_accessibility, options.directory)|raw }}
{% endmacro %}